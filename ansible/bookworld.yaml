- name: Deploy Artifact
  hosts: bookworld
  become: yes
  vars:
    backup_timestamp: "{{ansible_date_time.date}}_{{ansible_date_time.time}}"
  tasks:
    - name: Test connection to nexus
      get_url:
        url: "http://{{nexusip}}:8081/"
        dest: /tmp/


    # - name: Download latest war from nexus
    #   get_url:
    #     url: "http://{{nexusip}}:8081/repository/{{repository}}/{{groupId}}/{{artifactId}}/{{version}}/{{artifactId}}-{{version}}.war"
    #     dest: "/tmp/bookworld-{{version}}"
    #     username: "{{nexususername}}"
    #     password: "{{nexuspassword}}"
    #   register: wardeploy
    #   tags:
    #    - deploy

#     - stat:
#         path: /usr/local/tomcat8/webapps/ROOT
#       register: artifact_stat
#       tags:
#        - deploy

#     - name: Stop tomcat svc
#       service:
#         name: tomcat
#         state: stopped
#       tags:
#        - deploy

#     - name: Try Backup and Deploy
#       block:
#       - name: Archive ROOT dir with timestamp
#         archive:
#           path: /usr/local/tomcat8/webapps/ROOT
#           dest: "/opt/ROOT_{{backup_timestamp}}.tgz"
#         when: artifact_stat.stat.exists
#         register: archive_info
#         tags:
#          - deploy

#       - name: copy ROOT dir with old_ROOT name
#         shell: cp -r ROOT old_ROOT
#         args:
#           chdir: /usr/local/tomcat8/webapps/

#       - name: Delete current artifact
#         file:
#           path: "{{item}}"
#           state: absent
#         when: archive_info.changed
#         loop:
#          - /usr/local/tomcat8/webapps/ROOT
#          - /usr/local/tomcat8/webapps/ROOT.war
#         tags:
#          - deploy

#       - name: Try deploy artifact else restore from previos old_ROOT
#         block:
#          - name: Deploy the artifact
#            copy:
#              src: "/tmp/bookworld-{{version}}"
#              dest: /usr/local/tomcat8/webapps/ROOT.war
#              remote_src: yes
#            register: deploy_info
#            tags:
#             - deploy
#         rescue:
#           - shell: cp -r old_ROOT ROOT
#             args:
#               chdir: /usr/local/tomcat8/webapps/

#       rescue:
#        - name: Start tomcat svc
#          service:
#           name: tomcat
#           state: started

#     - name: Start tomcat svc
#       service:
#         name: tomcat
#         state: started
#       when: deploy_info.changed
#       tags:
#        - deploy

#     - name: Wait until ROOT.war is extracted to ROOT directory
#       wait_for:
#         path: /usr/local/tomcat8/webapps/ROOT
#       tags:
#        - deploy

# #    - name: Deploy web configuration file
# #      template:
# #        src: templates/application.j2
# #        dest: /usr/local/tomcat8/webapps/ROOT/WEB-INF/classes/application.properties
# #        force: yes
# #      notify:
# #       - Restart Tomcat
# #      tags:
# #       - deploy

#   handlers:
#    - name: Restart Tomcat
#      service:
#       name: tomcat
#       state: restarted
